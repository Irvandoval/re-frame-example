["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseInverter.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseInverter=function(global,require,module,exports){var baseForOwn=require(\"module$node_modules$lodash$_baseForOwn\");module.exports=function(object$jscomp$0,setter,iteratee,accumulator){baseForOwn(object$jscomp$0,function(value,key,object){setter(accumulator,iteratee(value),key,object)});return accumulator}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseInverter\"] = function(global,require,module,exports) {\nvar baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseForOwn","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1567518500762,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseInverter.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACrG,IAAIC,WAAaH,OAAA,CAAQ,wCAAR,CAoBjBC,OAAAC,QAAA,CAPAE,QAAqB,CAACC,eAAD,CAASC,MAAT,CAAiBC,QAAjB,CAA2BC,WAA3B,CAAwC,CAC3DL,UAAA,CAAWE,eAAX,CAAmB,QAAQ,CAACI,KAAD,CAAQC,GAAR,CAAaL,MAAb,CAAqB,CAC9CC,MAAA,CAAOE,WAAP,CAAoBD,QAAA,CAASE,KAAT,CAApB,CAAqCC,GAArC,CAA0CL,MAA1C,CAD8C,CAAhD,CAGA,OAAOG,YAJoD,CAdwC;\",\n\"sources\":[\"node_modules/lodash/_baseInverter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseInverter\\\"] = function(global,require,module,exports) {\\nvar baseForOwn = require('./_baseForOwn');\\n\\n/**\\n * The base implementation of `_.invert` and `_.invertBy` which inverts\\n * `object` with values transformed by `iteratee` and set by `setter`.\\n *\\n * @private\\n * @param {Object} object The object to iterate over.\\n * @param {Function} setter The function to set `accumulator` values.\\n * @param {Function} iteratee The iteratee to transform values.\\n * @param {Object} accumulator The initial inverted object.\\n * @returns {Function} Returns `accumulator`.\\n */\\nfunction baseInverter(object, setter, iteratee, accumulator) {\\n  baseForOwn(object, function(value, key, object) {\\n    setter(accumulator, iteratee(value), key, object);\\n  });\\n  return accumulator;\\n}\\n\\nmodule.exports = baseInverter;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseForOwn\",\"baseInverter\",\"object\",\"setter\",\"iteratee\",\"accumulator\",\"value\",\"key\"]\n}\n"]