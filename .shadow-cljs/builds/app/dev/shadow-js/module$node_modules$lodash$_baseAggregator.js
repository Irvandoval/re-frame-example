["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseAggregator.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseAggregator=function(global,require,module,exports){var baseEach=require(\"module$node_modules$lodash$_baseEach\");module.exports=function(collection$jscomp$0,setter,iteratee,accumulator){baseEach(collection$jscomp$0,function(value,key,collection){setter(accumulator,value,iteratee(value),collection)});return accumulator}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseAggregator\"] = function(global,require,module,exports) {\nvar baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_baseEach"]],"~:properties",["^5",[]],"~:compiled-at",1567518500528,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseAggregator.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACvG,IAAIC,SAAWH,OAAA,CAAQ,sCAAR,CAoBfC,OAAAC,QAAA,CAPAE,QAAuB,CAACC,mBAAD,CAAaC,MAAb,CAAqBC,QAArB,CAA+BC,WAA/B,CAA4C,CACjEL,QAAA,CAASE,mBAAT,CAAqB,QAAQ,CAACI,KAAD,CAAQC,GAAR,CAAaL,UAAb,CAAyB,CACpDC,MAAA,CAAOE,WAAP,CAAoBC,KAApB,CAA2BF,QAAA,CAASE,KAAT,CAA3B,CAA4CJ,UAA5C,CADoD,CAAtD,CAGA,OAAOG,YAJ0D,CAdoC;\",\n\"sources\":[\"node_modules/lodash/_baseAggregator.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseAggregator\\\"] = function(global,require,module,exports) {\\nvar baseEach = require('./_baseEach');\\n\\n/**\\n * Aggregates elements of `collection` on `accumulator` with keys transformed\\n * by `iteratee` and values set by `setter`.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} setter The function to set `accumulator` values.\\n * @param {Function} iteratee The iteratee to transform keys.\\n * @param {Object} accumulator The initial aggregated object.\\n * @returns {Function} Returns `accumulator`.\\n */\\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\\n  baseEach(collection, function(value, key, collection) {\\n    setter(accumulator, value, iteratee(value), collection);\\n  });\\n  return accumulator;\\n}\\n\\nmodule.exports = baseAggregator;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseEach\",\"baseAggregator\",\"collection\",\"setter\",\"iteratee\",\"accumulator\",\"value\",\"key\"]\n}\n"]