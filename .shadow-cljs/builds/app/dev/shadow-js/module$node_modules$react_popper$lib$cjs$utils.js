["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-popper/lib/cjs/utils.js"],"~:js","shadow$provide.module$node_modules$react_popper$lib$cjs$utils=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.safeInvoke=exports.unwrapArray=void 0;exports.unwrapArray=function(arg){return Array.isArray(arg)?arg[0]:arg};exports.safeInvoke=function(fn){if(\"function\"===typeof fn){for(var _len=arguments.length,args=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];return fn.apply(void 0,args)}}}","~:source","shadow$provide[\"module$node_modules$react_popper$lib$cjs$utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.safeInvoke = exports.unwrapArray = void 0;\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nvar unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\n\nexports.unwrapArray = unwrapArray;\n\nvar safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === \"function\") {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};\n\nexports.safeInvoke = safeInvoke;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","safeInvoke","unwrapArray"]],"~:compiled-at",1567518500760,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_popper$lib$cjs$utils.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3GC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAAI,WAAA,CAAqBJ,OAAAK,YAArB,CAA2C,IAAK,EAehDL,QAAAK,YAAA,CATkBA,QAAoB,CAACC,GAAD,CAAM,CAC1C,MAAOC,MAAAC,QAAA,CAAcF,GAAd,CAAA,CAAqBA,GAAA,CAAI,CAAJ,CAArB,CAA8BA,GADK,CAqB5CN,QAAAI,WAAA,CAViBA,QAAmB,CAACK,EAAD,CAAK,CACvC,GAAkB,UAAlB,GAAI,MAAOA,GAAX,CAA8B,CAC5B,IAD4B,IACnBC,KAAOC,SAAAC,OADY,CACMC,KAAWN,KAAJ,CAAiB,CAAP,CAAAG,IAAA,CAAWA,IAAX,CAAkB,CAAlB,CAAsB,CAAhC,CADb,CACiDI,KAAO,CAApF,CAAuFA,IAAvF,CAA8FJ,IAA9F,CAAoGI,IAAA,EAApG,CACED,IAAA,CAAKC,IAAL,CAAY,CAAZ,CAAA,CAAiBH,SAAA,CAAUG,IAAV,CAGnB,OAAOL,GAAAM,MAAA,CAAS,IAAK,EAAd,CAAiBF,IAAjB,CALqB,CADS,CAvBkE;\",\n\"sources\":[\"node_modules/react-popper/lib/cjs/utils.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_popper$lib$cjs$utils\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.safeInvoke = exports.unwrapArray = void 0;\\n\\n/**\\n * Takes an argument and if it's an array, returns the first item in the array,\\n * otherwise returns the argument. Used for Preact compatibility.\\n */\\nvar unwrapArray = function unwrapArray(arg) {\\n  return Array.isArray(arg) ? arg[0] : arg;\\n};\\n/**\\n * Takes a maybe-undefined function and arbitrary args and invokes the function\\n * only if it is defined.\\n */\\n\\n\\nexports.unwrapArray = unwrapArray;\\n\\nvar safeInvoke = function safeInvoke(fn) {\\n  if (typeof fn === \\\"function\\\") {\\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n      args[_key - 1] = arguments[_key];\\n    }\\n\\n    return fn.apply(void 0, args);\\n  }\\n};\\n\\nexports.safeInvoke = safeInvoke;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"safeInvoke\",\"unwrapArray\",\"arg\",\"Array\",\"isArray\",\"fn\",\"_len\",\"arguments\",\"length\",\"args\",\"_key\",\"apply\"]\n}\n"]