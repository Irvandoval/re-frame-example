["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/some.js"],"~:js","shadow$provide.module$node_modules$lodash$some=function(global,require,module,exports){var arraySome=require(\"module$node_modules$lodash$_arraySome\"),baseIteratee=require(\"module$node_modules$lodash$_baseIteratee\"),baseSome=require(\"module$node_modules$lodash$_baseSome\"),isArray=require(\"module$node_modules$lodash$isArray\"),isIterateeCall=require(\"module$node_modules$lodash$_isIterateeCall\");module.exports=function(collection,predicate,guard){var func=isArray(collection)?arraySome:baseSome;guard&&\nisIterateeCall(collection,predicate,guard)&&(predicate=void 0);return func(collection,baseIteratee(predicate,3))}}","~:source","shadow$provide[\"module$node_modules$lodash$some\"] = function(global,require,module,exports) {\nvar arraySome = require('./_arraySome'),\n    baseIteratee = require('./_baseIteratee'),\n    baseSome = require('./_baseSome'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = some;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseSome","~$module$node_modules$lodash$_arraySome","~$module$node_modules$lodash$_isIterateeCall","~$shadow.js","~$module$node_modules$lodash$_baseIteratee","~$module$node_modules$lodash$isArray"]],"~:properties",["^5",[]],"~:compiled-at",1567518500531,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$some.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,gCAAA,CAAoD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACxFC,UAAYH,OAAA,CAAQ,uCAAR,CAD4E,CAExFI,aAAeJ,OAAA,CAAQ,0CAAR,CAFyE,CAGxFK,SAAWL,OAAA,CAAQ,sCAAR,CAH6E,CAIxFM,QAAUN,OAAA,CAAQ,oCAAR,CAJ8E,CAKxFO,eAAiBP,OAAA,CAAQ,4CAAR,CA8CrBC,OAAAC,QAAA,CARAM,QAAa,CAACC,UAAD,CAAaC,SAAb,CAAwBC,KAAxB,CAA+B,CAC1C,IAAIC,KAAON,OAAA,CAAQG,UAAR,CAAA,CAAsBN,SAAtB,CAAkCE,QACzCM,MAAJ;AAAaJ,cAAA,CAAeE,UAAf,CAA2BC,SAA3B,CAAsCC,KAAtC,CAAb,GACED,SADF,CACcG,IAAAA,EADd,CAGA,OAAOD,KAAA,CAAKH,UAAL,CAAiBL,YAAA,CAAaM,SAAb,CAAwB,CAAxB,CAAjB,CALmC,CA3CgD;\",\n\"sources\":[\"node_modules/lodash/some.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$some\\\"] = function(global,require,module,exports) {\\nvar arraySome = require('./_arraySome'),\\n    baseIteratee = require('./_baseIteratee'),\\n    baseSome = require('./_baseSome'),\\n    isArray = require('./isArray'),\\n    isIterateeCall = require('./_isIterateeCall');\\n\\n/**\\n * Checks if `predicate` returns truthy for **any** element of `collection`.\\n * Iteration is stopped once `predicate` returns truthy. The predicate is\\n * invoked with three arguments: (value, index|key, collection).\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Collection\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n * @returns {boolean} Returns `true` if any element passes the predicate check,\\n *  else `false`.\\n * @example\\n *\\n * _.some([null, 0, 'yes', false], Boolean);\\n * // => true\\n *\\n * var users = [\\n *   { 'user': 'barney', 'active': true },\\n *   { 'user': 'fred',   'active': false }\\n * ];\\n *\\n * // The `_.matches` iteratee shorthand.\\n * _.some(users, { 'user': 'barney', 'active': false });\\n * // => false\\n *\\n * // The `_.matchesProperty` iteratee shorthand.\\n * _.some(users, ['active', false]);\\n * // => true\\n *\\n * // The `_.property` iteratee shorthand.\\n * _.some(users, 'active');\\n * // => true\\n */\\nfunction some(collection, predicate, guard) {\\n  var func = isArray(collection) ? arraySome : baseSome;\\n  if (guard && isIterateeCall(collection, predicate, guard)) {\\n    predicate = undefined;\\n  }\\n  return func(collection, baseIteratee(predicate, 3));\\n}\\n\\nmodule.exports = some;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"arraySome\",\"baseIteratee\",\"baseSome\",\"isArray\",\"isIterateeCall\",\"some\",\"collection\",\"predicate\",\"guard\",\"func\",\"undefined\"]\n}\n"]