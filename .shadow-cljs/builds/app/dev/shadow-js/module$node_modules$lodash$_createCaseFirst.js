["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_createCaseFirst.js"],"~:js","shadow$provide.module$node_modules$lodash$_createCaseFirst=function(global,require,module,exports){var castSlice=require(\"module$node_modules$lodash$_castSlice\"),hasUnicode=require(\"module$node_modules$lodash$_hasUnicode\"),stringToArray=require(\"module$node_modules$lodash$_stringToArray\"),toString=require(\"module$node_modules$lodash$toString\");module.exports=function(methodName){return function(string){string=toString(string);var strSymbols=hasUnicode(string)?stringToArray(string):void 0,chr=strSymbols?\nstrSymbols[0]:string.charAt(0);string=strSymbols?castSlice(strSymbols,1).join(\"\"):string.slice(1);return chr[methodName]()+string}}}","~:source","shadow$provide[\"module$node_modules$lodash$_createCaseFirst\"] = function(global,require,module,exports) {\nvar castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_hasUnicode","~$module$node_modules$lodash$_castSlice","~$module$node_modules$lodash$_stringToArray","~$module$node_modules$lodash$toString"]],"~:properties",["^5",[]],"~:compiled-at",1567518500675,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_createCaseFirst.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACpGC,UAAYH,OAAA,CAAQ,uCAAR,CADwF,CAEpGI,WAAaJ,OAAA,CAAQ,wCAAR,CAFuF,CAGpGK,cAAgBL,OAAA,CAAQ,2CAAR,CAHoF,CAIpGM,SAAWN,OAAA,CAAQ,qCAAR,CA6BfC,OAAAC,QAAA,CApBAK,QAAwB,CAACC,UAAD,CAAa,CACnC,MAAO,SAAQ,CAACC,MAAD,CAAS,CACtBA,MAAA,CAASH,QAAA,CAASG,MAAT,CAET,KAAIC,WAAaN,UAAA,CAAWK,MAAX,CAAA,CACbJ,aAAA,CAAcI,MAAd,CADa,CAEbE,IAAAA,EAFJ,CAIIC,IAAMF,UAAA;AACNA,UAAA,CAAW,CAAX,CADM,CAEND,MAAAI,OAAA,CAAc,CAAd,CAEAC,OAAAA,CAAWJ,UAAA,CACXP,SAAA,CAAUO,UAAV,CAAsB,CAAtB,CAAAK,KAAA,CAA8B,EAA9B,CADW,CAEXN,MAAAO,MAAA,CAAa,CAAb,CAEJ,OAAOJ,IAAA,CAAIJ,UAAJ,CAAA,EAAP,CAA2BM,MAfL,CADW,CAbmE;\",\n\"sources\":[\"node_modules/lodash/_createCaseFirst.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_createCaseFirst\\\"] = function(global,require,module,exports) {\\nvar castSlice = require('./_castSlice'),\\n    hasUnicode = require('./_hasUnicode'),\\n    stringToArray = require('./_stringToArray'),\\n    toString = require('./toString');\\n\\n/**\\n * Creates a function like `_.lowerFirst`.\\n *\\n * @private\\n * @param {string} methodName The name of the `String` case method to use.\\n * @returns {Function} Returns the new case function.\\n */\\nfunction createCaseFirst(methodName) {\\n  return function(string) {\\n    string = toString(string);\\n\\n    var strSymbols = hasUnicode(string)\\n      ? stringToArray(string)\\n      : undefined;\\n\\n    var chr = strSymbols\\n      ? strSymbols[0]\\n      : string.charAt(0);\\n\\n    var trailing = strSymbols\\n      ? castSlice(strSymbols, 1).join('')\\n      : string.slice(1);\\n\\n    return chr[methodName]() + trailing;\\n  };\\n}\\n\\nmodule.exports = createCaseFirst;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"castSlice\",\"hasUnicode\",\"stringToArray\",\"toString\",\"createCaseFirst\",\"methodName\",\"string\",\"strSymbols\",\"undefined\",\"chr\",\"charAt\",\"trailing\",\"join\",\"slice\"]\n}\n"]