["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_replaceHolders.js"],"~:js","shadow$provide.module$node_modules$lodash$_replaceHolders=function(global,require,module,exports){module.exports=function(array,placeholder){for(var index=-1,length=array.length,resIndex=0,result=[];++index<length;){var value=array[index];if(value===placeholder||\"__lodash_placeholder__\"===value)array[index]=\"__lodash_placeholder__\",result[resIndex++]=index}return result}}","~:source","shadow$provide[\"module$node_modules$lodash$_replaceHolders\"] = function(global,require,module,exports) {\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value === placeholder || value === PLACEHOLDER) {\n      array[index] = PLACEHOLDER;\n      result[resIndex++] = index;\n    }\n  }\n  return result;\n}\n\nmodule.exports = replaceHolders;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1567518500584,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_replaceHolders.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA6BvGD,MAAAC,QAAA,CAhBAC,QAAuB,CAACC,KAAD,CAAQC,WAAR,CAAqB,CAM1C,IAN0C,IACtCC,MAAS,EAD6B,CAEtCC,OAASH,KAAAG,OAF6B,CAGtCC,SAAW,CAH2B,CAItCC,OAAS,EAEb,CAAO,EAAEH,KAAT,CAAiBC,MAAjB,CAAA,CAAyB,CACvB,IAAIG,MAAQN,KAAA,CAAME,KAAN,CACZ,IAAII,KAAJ,GAAcL,WAAd,EAnBcM,wBAmBd,GAA6BD,KAA7B,CACEN,KAAA,CAAME,KAAN,CACA,CArBYK,wBAqBZ,CAAAF,MAAA,CAAOD,QAAA,EAAP,CAAA,CAAqBF,KAJA,CAOzB,MAAOG,OAbmC,CAb2D;\",\n\"sources\":[\"node_modules/lodash/_replaceHolders.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_replaceHolders\\\"] = function(global,require,module,exports) {\\n/** Used as the internal argument placeholder. */\\nvar PLACEHOLDER = '__lodash_placeholder__';\\n\\n/**\\n * Replaces all `placeholder` elements in `array` with an internal placeholder\\n * and returns an array of their indexes.\\n *\\n * @private\\n * @param {Array} array The array to modify.\\n * @param {*} placeholder The placeholder to replace.\\n * @returns {Array} Returns the new array of placeholder indexes.\\n */\\nfunction replaceHolders(array, placeholder) {\\n  var index = -1,\\n      length = array.length,\\n      resIndex = 0,\\n      result = [];\\n\\n  while (++index < length) {\\n    var value = array[index];\\n    if (value === placeholder || value === PLACEHOLDER) {\\n      array[index] = PLACEHOLDER;\\n      result[resIndex++] = index;\\n    }\\n  }\\n  return result;\\n}\\n\\nmodule.exports = replaceHolders;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"replaceHolders\",\"array\",\"placeholder\",\"index\",\"length\",\"resIndex\",\"result\",\"value\",\"PLACEHOLDER\"]\n}\n"]