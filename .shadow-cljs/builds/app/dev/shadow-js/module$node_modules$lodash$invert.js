["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/invert.js"],"~:js","shadow$provide.module$node_modules$lodash$invert=function(global,require,module,exports){global=require(\"module$node_modules$lodash$constant\");exports=require(\"module$node_modules$lodash$_createInverter\");require=require(\"module$node_modules$lodash$identity\");var nativeObjectToString=Object.prototype.toString;require=exports(function(result,value,key){null!=value&&\"function\"!=typeof value.toString&&(value=nativeObjectToString.call(value));result[value]=key},global(require));module.exports=require}","~:source","shadow$provide[\"module$node_modules$lodash$invert\"] = function(global,require,module,exports) {\nvar constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$constant","~$module$node_modules$lodash$_createInverter","~$shadow.js","~$module$node_modules$lodash$identity"]],"~:properties",["^5",[]],"~:compiled-at",1567518500762,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$invert.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,kCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC1FC,MAAAA,CAAWH,OAAA,CAAQ,qCAAR,CACXI,QAAAA,CAAiBJ,OAAA,CAAQ,4CAAR,CACjBK,QAAAA,CAAWL,OAAA,CAAQ,qCAAR,CAUf,KAAIM,qBAPcC,MAAAC,UAOSC,SAoBvBC,QAAAA,CAASN,OAAA,CAAe,QAAQ,CAACO,MAAD,CAASC,KAAT,CAAgBC,GAAhB,CAAqB,CAC1C,IAAb,EAAID,KAAJ,EAC6B,UAD7B,EACI,MAAOA,MAAAH,SADX,GAEEG,KAFF,CAEUN,oBAAAQ,KAAA,CAA0BF,KAA1B,CAFV,CAKAD,OAAA,CAAOC,KAAP,CAAA,CAAgBC,GANuC,CAA5C,CAOVV,MAAA,CAASE,OAAT,CAPU,CASbJ,OAAAC,QAAA,CAAiBQ,OA1C6E;\",\n\"sources\":[\"node_modules/lodash/invert.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$invert\\\"] = function(global,require,module,exports) {\\nvar constant = require('./constant'),\\n    createInverter = require('./_createInverter'),\\n    identity = require('./identity');\\n\\n/** Used for built-in method references. */\\nvar objectProto = Object.prototype;\\n\\n/**\\n * Used to resolve the\\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\\n * of values.\\n */\\nvar nativeObjectToString = objectProto.toString;\\n\\n/**\\n * Creates an object composed of the inverted keys and values of `object`.\\n * If `object` contains duplicate values, subsequent values overwrite\\n * property assignments of previous values.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.7.0\\n * @category Object\\n * @param {Object} object The object to invert.\\n * @returns {Object} Returns the new inverted object.\\n * @example\\n *\\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\\n *\\n * _.invert(object);\\n * // => { '1': 'c', '2': 'b' }\\n */\\nvar invert = createInverter(function(result, value, key) {\\n  if (value != null &&\\n      typeof value.toString != 'function') {\\n    value = nativeObjectToString.call(value);\\n  }\\n\\n  result[value] = key;\\n}, constant(identity));\\n\\nmodule.exports = invert;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"constant\",\"createInverter\",\"identity\",\"nativeObjectToString\",\"Object\",\"prototype\",\"toString\",\"invert\",\"result\",\"value\",\"key\",\"call\"]\n}\n"]