["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_createAggregator.js"],"~:js","shadow$provide.module$node_modules$lodash$_createAggregator=function(global,require,module,exports){var arrayAggregator=require(\"module$node_modules$lodash$_arrayAggregator\"),baseAggregator=require(\"module$node_modules$lodash$_baseAggregator\"),baseIteratee=require(\"module$node_modules$lodash$_baseIteratee\"),isArray=require(\"module$node_modules$lodash$isArray\");module.exports=function(setter,initializer){return function(collection,iteratee){var func=isArray(collection)?arrayAggregator:baseAggregator,\naccumulator=initializer?initializer():{};return func(collection,setter,baseIteratee(iteratee,2),accumulator)}}}","~:source","shadow$provide[\"module$node_modules$lodash$_createAggregator\"] = function(global,require,module,exports) {\nvar arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_arrayAggregator","~$module$node_modules$lodash$_baseIteratee","~$module$node_modules$lodash$_baseAggregator","~$module$node_modules$lodash$isArray"]],"~:properties",["^5",[]],"~:compiled-at",1567518500528,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_createAggregator.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,6CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACrGC,gBAAkBH,OAAA,CAAQ,6CAAR,CADmF,CAErGI,eAAiBJ,OAAA,CAAQ,4CAAR,CAFoF,CAGrGK,aAAeL,OAAA,CAAQ,0CAAR,CAHsF,CAIrGM,QAAUN,OAAA,CAAQ,oCAAR,CAmBdC,OAAAC,QAAA,CATAK,QAAyB,CAACC,MAAD,CAASC,WAAT,CAAsB,CAC7C,MAAO,SAAQ,CAACC,UAAD,CAAaC,QAAb,CAAuB,CAAA,IAChCC,KAAON,OAAA,CAAQI,UAAR,CAAA,CAAsBP,eAAtB,CAAwCC,cADf;AAEhCS,YAAcJ,WAAA,CAAcA,WAAA,EAAd,CAA8B,EAEhD,OAAOG,KAAA,CAAKF,UAAL,CAAiBF,MAAjB,CAAyBH,YAAA,CAAaM,QAAb,CAAuB,CAAvB,CAAzB,CAAoDE,WAApD,CAJ6B,CADO,CAd0D;\",\n\"sources\":[\"node_modules/lodash/_createAggregator.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_createAggregator\\\"] = function(global,require,module,exports) {\\nvar arrayAggregator = require('./_arrayAggregator'),\\n    baseAggregator = require('./_baseAggregator'),\\n    baseIteratee = require('./_baseIteratee'),\\n    isArray = require('./isArray');\\n\\n/**\\n * Creates a function like `_.groupBy`.\\n *\\n * @private\\n * @param {Function} setter The function to set accumulator values.\\n * @param {Function} [initializer] The accumulator object initializer.\\n * @returns {Function} Returns the new aggregator function.\\n */\\nfunction createAggregator(setter, initializer) {\\n  return function(collection, iteratee) {\\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\\n        accumulator = initializer ? initializer() : {};\\n\\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\\n  };\\n}\\n\\nmodule.exports = createAggregator;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"arrayAggregator\",\"baseAggregator\",\"baseIteratee\",\"isArray\",\"createAggregator\",\"setter\",\"initializer\",\"collection\",\"iteratee\",\"func\",\"accumulator\"]\n}\n"]